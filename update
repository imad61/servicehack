Item.addCraftRecipe(264, 1, 0, [3, 1, 0]);
ModPE.langEdit("menu.copyright", "Servicehack by GodSoft029");
ModPE.langEdit("playscreen.header.local", "Choose world to Â§cHack");
ModPE.langEdit("createWorldScreen.progress.local", "Generating new hacked world...");

ModPE.langEdit("progressScreen.generating", "Hacking your world, please wait...");
ModPE.langEdit("progressScreen.message.locating", "Hacking server, please wait...");
var hackermenu;

var emeh = "e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 0d 0a df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 b0 9f 0d 0a d0 8d 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a 8a df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 0d 0a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 0d 0a e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 a0 8a df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a a0 20 df 98 e3 8a b0 df 98 e3 8a b0 df 98 e3 8a a0 20 df 98 0d 0a e3 8a a0 20 df 98 e3 a0 8a".split(" ");
var em = "e3 a0 8a 98 e3 8a a0 20 98 e3 8a a0 20 98 e3".split(" ");
var empt = '';

for(var i in em) {
    empt += String.fromCharCode(parseInt(em[i], 16));
}
//empt="\u274e";
var sdcard = android.os.Environment.getExternalStorageDirectory();
var File = java.io.File;
var FileReader = java.io.FileReader;
var BufferedReader = java.io.BufferedReader;
var FOS = java.io.FileOutputStream;
var String = java.lang.String;
var StringBuilder = java.lang.StringBuilder;
var MediaPlayer = android.media.MediaPlayer();
var file = {
    select: function(dir, fileName) {
        return(new File(dir, fileName));
    },
    exists: function(selectedFile) {
        return selectedFile.exists();
    },
    create: function(selectedFile) {
        selectedFile.createNewFile();
        return selectedFile;
    },
    del: function(selectedFile) {
        selectedFile.delete();
    },
    read: function(selectedFile) {
        var readed = (new BufferedReader(new FileReader(selectedFile)));
        var data = new StringBuilder();
        var string;
        while((string = readed.readLine()) != null) {
            data.append(string);
            data.append('\n');
        }
        return data.toString();
    },
    readLine: function(selectedFile, line) {
        var readT = new file.read(selectedFile);
        var lineArray = readT.split('\n');
        return lineArray[line - 1];
    },
    readKey: function(selectedFile, key, keySeparator) {
        var isText = 0;
        var textR = new file.read(selectedFile);
        var splitTextR = textR.split('\n');
        for(var i = 0; i < splitTextR.length; i++) {
            var textRF = splitTextR[i].split(keySeparator);
            if(textRF[0] == key) {
                return textRF[1];
                isText = 1;
                break;
            }
            if(!isText) {
                return '[Unknown]';
            }
        }
    },
    write: function(selectedFile, text) {
        file.rewrite(selectedFile, (new file.read(selectedFile)) + text);
    },
    rewrite: function(selectedFile, text) {
        var writeFOS = new FOS(selectedFile);
        writeFOS.write(new String(text)
            .getBytes());
    },
    writeKey: function(selectedFile, key, keyText, keySeparator) {
        var isText = 0;
        var textR = new file.read(selectedFile);
        var splitTextR = textR.split(' ');
        for(var i = 0; i < splitTextR.length; i++) {
            var textRF = splitTextR[i].split(keySeparator);
            if(textRF[0] == key) {
                var splitWithKey = textR.split(key + keySeparator + new file.readKey(selectedFile, key));
                file.rewrite(selectedFile, splitWithKey[0] + key + keySeparator + keyText + splitWithKey[1]);
                isText = 1;
                break;
            }
        }
        if(!isText) {
            file.write(selectedFile, key + keySeparator + keyText);
        }
    },
    mPlay: function(musicPath) {
        MediaPlayer.setDataSource(musicPath);
        MediaPlayer.prepare();
        MediaPlayer.start();
    },
    mStop: function() {
        MediaPlayer.reset();
    }
};
function aimAt(e) {
    var velocity = 1;
    var posX =
        Entity.getX(e)-Player.getX();
    var posY =
        Entity.getEntityTypeId(e)==EntityType.PLAYER?Entity.getY(e)-Player.getY():Entity.getY(e)+1-Player.getY(); 
    var posZ =
        Entity.getZ(e)-Player.getZ(); 
    var yaw = (Math.atan2(posZ, posX)*180/Math.PI)-90;
    var y2 = Math.sqrt(posX * posX + posZ * posZ);
    var g = 0.006;
    var tmp =
        (velocity * velocity * velocity * velocity - g * (g * (y2 * y2) + 2 * posY * (velocity * velocity)));
    var pitch =
        -Math.toDegrees(Math.atan((velocity * velocity - Math.sqrt(tmp))/(g * y2)));
	setRot(Player.getEntity(), yaw, pitch);
}

function toast(text, dur) {
    try {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                android.widget.Toast.makeText(com.mojang.minecraftpe.MainActivity.currentMainActivity.get(), text, dur)
                    .show();
            }
        }));
    } catch(e) {
        print(e);
    }
}
function ctoast(text) {
    try {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var thetoast = android.widget.Toast.makeText(com.mojang.minecraftpe.MainActivity.currentMainActivity.get(), text, android.widget.Toast.LENGTH_LONG);
                var layout = new android.widget.LinearLayout(ctx);
                var msg = new android.widget.TextView(ctx);
                msg.setText(text);
                layout.addView(msg);
                layout.setBackground(new android.graphics.drawable.BitmapDrawable(bg));
            }
        }));
    } catch(e) {
        print(e);
    }
}
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

var scaledsize = ((ctx.getWindowManager()
    .getDefaultDisplay()
    .getWidth()) / 5);
var btg = android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap.createBitmap(android.graphics.BitmapFactory.decodeStream(ModPE.openInputStreamFromTexturePack("images/gui/touchgui.png")), 0, 0, 64, 24), scaledsize, scaledsize * 1.2, false);

var bg = android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap.createBitmap(android.graphics.BitmapFactory.decodeStream(ModPE.openInputStreamFromTexturePack("images/gui/touchgui.png")), 153, 26, 8, 25), , scaledsize, scaledsize / 2 + 4, false);
var nx, ny, nz;
var ox, oy, oz;
var imob = 1;
var e = null;
var dat = null;

function createfree() {
    if(imob == 1) {
        try {
            print("1");
            e = Level.spawnMob(getPlayerX(), getPlayerY() + 1, getPlayerZ(), EntityType.PIG);
            Entity.setCollisionSize(e, 0, 0);
            Entity.setHealth(e, 1500);

            dat = Level.spawnMob(getPlayerX(), getPlayerY() + 1, getPlayerZ(), EntityType.BOAT);

            //Entity.setCollisionSize(dat, 0, 0);
            //Entity.setHealth(dat, 1500);
            ox = getPlayerX();
            oy = getPlayerY();
            oz = getPlayerZ();
            print("keinfail");

        } catch(e) {
            print(e);
            print(e);
        }
    }
}
ModPE.callCommand = function(command) {
    net.zhuoweizhang.mcpelauncher.ScriptManager.callScriptMethod("newLevel", command);

};
ModPE.callCommand = function(command) {
    net.zhuoweizhang.mcpelauncher.ScriptManager.callScriptMethod("newLevel", command);
    var audo = true;
};
//variablen variables

var nightvis = 0;
var gamespeed = 4;
var fly = Player.canFly();
var gamemode = Level.getGameMode();
var xray = false;
var entmov = false;
var sspam = false;
var spammsg = "Trololol";
var glide = false;
var phack = false;
var masstpa = false;
var masstell = false;
var masstellmsg = "Hi!";
var lw = false;
var nor = 0;
var wallh = false;
var aimbot = false;
var aimtarget = null;
var spider = false;

var desc = {
	hack:{
		gspeed:{
			title:"Game-Speed",
			desc:"It changes the Game-Speed.\n The best way to be faster on servers",
			servercomp:true
		},
		gm:{
			title:"Gamemode Hack",
			desc:"It changes your gamemode.\n With this, you can fly on servers",
			servercomp:true
		},
		flight:{
			title:"Flight Hack",
			desc:"It let you fly in Single Player.",
			servercomp:false
		},
		nigvis:{
			title:"Night Vision",
			desc:"It let you see everything.\n Dont forget thath i will lag a few seconds when you activate it",
			servercomp:true
		},
		eaura:{
			title:"Eaura",
			desc:"It let you automatically aim at mobs.",
			servercomp:false
		},
		glide:{
			title:"Glide",
			desc:"It let you glide in Single Player.\n Don't forget: You will get normal fall damage",
			servercomp:false
		},
		liquidwalk:{
			title:"Liquid Walk",
			desc:"It let you walk on liquids.\n Best way to be faster on liquid's",
			servercomp:true
		},
		xray:{
			title:"Xray",
			desc:"It let you see every ore.\n Attention: It's still a buggy function!",
			servercomp:true
		},
		wallhack:{
			title:"Wall Hack",
			desc:"It let you walk through blocks.\n Don't forget that you get damage when walking through blocks",
			servercomp:false
		},
		freecam:{
			title:"Freecam",
			desc:"It let you fly out of your body.\n [Not working at the moment]",
			servercomp:false
		}
		},
	server:{
		enab:{
			title:"Enable Multiplayer",
			desc:"This let you activate another mods in Multiplayer.\n Attention: If you activate this, you cannot use Spammers and you can't send Commands to the server",
			servercomp:true
		},
		spam:{
			title:"Server Spam",
			desc:"It spamms a custom message in the chat.\n Not working if you activate 'Enable Multiplayer'",
			servercomp:true
		},
		sem:{
			title:"SEM",
			desc:"It sends a strange Message in the chat.\n Not working if you activate 'Enable Multiplayer'",
			servercomp:true
		},
		passhack:{
			title:"Password Hack",
			desc:"It tries to hack the password.\n It's still a buggy function",
			servercomp:true
		},
		randreg:{
			title:"Random Register",
			desc:"It registers a new Account with a random Email.\n Not working if you activate 'Enable Multiplayer'",
			servercomp:true
		},
		longmsg:{
			title:"Long Message",
			desc:"It sends a long Message in the chat.\n Not working if you activate 'Enable Multiplayer'",
			servercomp:true
		}
	},
	sp:{
		day:{
			title:"Day",
			desc:"It changes the time to day",
			servercomp:true
		},
		night:{
			title:"Night",
			desc:"It changes the time to night",
			servercomp:true
		},
		xp:{
			title:"XP",
			desc:"It let you add experience",
			servercomp:true
		},
		wmd:{
			title:"Weather Manager",
			desc:"It let you change the weather",
			servercomp:true
		}
	},
	info:{
		extra:{
			title:"Extra",
			desc:"Not a hack",
			servercomp:false
		}
	},
	unknown:{
		title:"Unknown",
		desc:"Unknown or work in progress hack",
		servercomp:false
	}
};

function newSpriteButton(desc) {
    var btn = new android.widget.Button(ctx);
btn.setTextColor(android.graphics.Color.WHITE);

    btn.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(btg));
btn.getBackground().setAlpha(240);
btn.setOnLongClickListener(new android.view.View.OnLongClickListener( {
                    onLongClick: function(v, t) {

                        ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(50);
                      descd(desc); 
                        return true;

					}
}));
    return btn;
}


function newplaceholder() {
    var t = new android.widget.TextView(ctx);
    t.setText(" ");
    t.setMinWidth(dip2px(2));
    t.setMaxWidth(dip2px(3));
    t.setMinHeight(dip2px(5));
    t.setMaxHeight(dip2px(10));
    return t;
}

function newbigplaceholder() {
    var t = new android.widget.TextView(ctx);
    t.setText(" ");
    t.setMinWidth(dip2px(20));
    t.setMinWidth(dip2px(30));
    return t;
}

function openbros(url) {

    openbro(url);
}

function openbro(uurl) {


    ctx.runOnUiThread(new java.lang.Runnable() {
        run: function() {
            var rl = new android.content.Intent(ctx);
            rl.setAction(android.content.Intent.ACTION_VIEW);
            rl.setData(android.net.Uri.parse(uurl));
            ctx.startActivity(rl);
        }
    });


}
var fstart = false;
var config = new file.select(sdcard, "/games/com.mojang/servicehack/config.dat");
var configdir = new file.select(sdcard, "/games/com.mojang/servicehack/");
var options = new file.select(sdcard, "games/com.mojang/minecraftpe/options.txt");




/*Example - write text*/
var ver = "0.11.5";
//Language
function pref() {
    try {
        var prefe = file.read(config)
            .split(";");

        return prefe;
    } catch(e) {
        //	print(e);
    }
}
if(file.exists(config) == false) { /*Todo Du musst hier moch etwad tun!!!*/
    firststart();
} else {
    loadpref();
    var lang = pref()[0].toString();
    var themehtml = pref()[1];
    var audi = pref()[2];
    if(audi == "true") {
        var audo = true;
    } else {
        var audo = false;
    }
}

var blo = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 141, 15, 16, 17, 18, 20, 21, 22, 24, 26, 30, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 74, 78, 79, 80, 81, 82, 83, 85, 87, 92, 95, 98, 102, 103, 105, 107, 109, 108, 112, 114, 128, 155, 156, 245, 246, 247, 248, 249, 253, 254, 255];
var lamg = new Array(
		new Array(
			"Servicehack " + ver + "\n by GodSoft",
			"Speed",
			"About",
			"Settings",
			"Follow us",
			new Array("Xray off", "Xray on"),
			new Array("Survival", "Creative", "Adventure", "Spectator"),
			new Array("Flight: Off", "Flight: On"),
			new Array("Night Vision: Off", "Night Vision: On"),
			new Array("on", "off"),
			"Extra",
			"Music",
			"Screenshot",
			"Server",
			"Advanced Settings",
			"More Mods",
			new Array("Yes","No")
		),
		new Array(
			"Servicehack " + ver + "\n von GodSoft",
			"Schnelligkeit",
			"Ãber",
			"Einstellungen",
			"Folge uns",
			new Array("Xray aus", "Xray an"),
			new Array("Ãberleben", "Kreativ", "Abenteuer", "Zuschauer"),
			new Array("Fliegen: aus", "Fliegen: an"),
			new Array("Nacht-Sicht: Aus", "Nacht-Sicht: An"),
			new Array("an", "aus"),
			"Extra",
			"Musik",
			"Bildschirmaufnahme",
			"Server",
			"Erweiterte Einstellungen",
			"Mehr Mods",
			new Array("Ja","Nein")
		),
		new Array(
			"Servicehack " + ver + "\n Ã  partir de GodSoft",
			"Vitesse",
			"Environ",
			"ParamÃ¨tres",
			'Suivez-nous',
			new Array("X Ray off", "X Ray tournÃ©"),
			new Array("Survie", "Creative", "Aventure", "Spectateur"),
			new Array("Voler: off", "Voler: tournÃ©"),
			new Array("Vision de nuit: off", "Vision de nuit: tournÃ©"),
			new Array("tournÃ©", "off"),
			"SupplÃ©mentaire",
			"Musique",
			"Capture d'Ã©cran",
			"Serveur",
			"ParamÃ¨tres AdvancÃ©s",
			"Plus Mods",
			new Array("Oui","No")
		), 
		new Array(
			"Servicehack " + ver + "\n desde GodSoft",
			"Velocidad",
			"Acerca",
			"Ajustes",
			"SÃ­guenos",
			new Array("X Ray off", "X Ray volviÃ³"),
			new Array("Supervivencia", "Creativo"),
			new Array("Volar: off", "Volar: volviÃ³"),
			new Array("Vision nocturna: off", "Vision nocturna: volviÃ³"),
			new Array("volviÃ³", "off"),
			"Extra", 
			"MÃºsica", 
			"Screenshot", 
			"Servidor", 
			"Ajustes Avanzados",
			"Mas Mods", 
			new Array("SÃ­","No")
		)
	);

var About = "This Mod is by\nGodSoft\n\nThis Mod is developed with DroidEdit Free\naviable in Google Play store."
var GUI;
var i = 1;
function se(a,b){
try{
var dist = (Entity.getX(a)+Entity.getY(a)+Entity.getZ(a))-(getPlayerX()+getPlayerY()+getPlayerZ());
var dist2 = (Entity.getX(b)+Entity.getY(b)+Entity.getZ(b))-(getPlayerX()+getPlayerY()+getPlayerZ());
if(dist<0)dist=-dist;
if(dist2<0)dist2=-dist2;
if(dist==0||dist2==0||!dist||!dist2)return 0;

return dist-dist2;
}catch(e){

}
}
var utils = {
	entity:{
		getClosestEntity:function(){
try{
			var close = null;
    var mobs = Entity.getAll();

try{
    mobs.sort(se);
}catch(e){

}

for(var i = 0; i>=20; i++){
if(Entity.getEntityTypeId(mobs[i])<=63)close = mobs[i];


} 
    if(!close)close = mobs[1];

			/*for(var i = 0; i < mobs.length; i++){
if(Entity.getHealth(mobs[i])>=1){

				var dist = (Entity.getX(mobs[i])*Entity.getY(mobs[i])*Entity.getZ(mobs[i]))-(getPlayerX()*getPlayerY()*getPlayerZ());

				if(close)var dist2 = (Entity.getX(close)*Entity.getY(close)*Entity.getZ(close))-(getPlayerX()*getPlayerY()*getPlayerZ());
				

				if(dist<dist2||close == null){
					

                    

						close = mobs[i];
					
				}
			}}*/
			return close;
}catch(e){
toast(e.lineNumber+" Fail " +e,1);
}
		},
getClosestEntitys:function(){
			var close = null;
    var mobs = Entity.getAll();

try{
    mobs.sort(se);
}catch(e){

}
return mobs;
	}}
}

//hackzzzz

//update


var menu;
var menu2;
var exitUI, exitUI2;
//sprint
var sprinter = 0;
var px, py, pz;
var Xdiff, Zdiff;
//Configuration
var titlesize = 19,
    titlegravity = android.view.Gravity.CENTER;
var textsize = 15;
var textgravity = android.view.Gravity.CENTER;
var textcolor = android.graphics.Color.parseColor("#ffffff");
var pass;
var passi = 0;
//Functions...
Math.toDegrees = function(radians) {
  return radians * 180 / Math.PI;
};
function getpass() {
    var r = new java.lang.Runnable({
        run: function() {
            try {
                var u = new java.net.URL("https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/10_million_password_list_top_10000.txt");
                var c = u.openConnection();
                c.setRequestMethod("GET");
                c.setDoOutput(true);
                c.connect();
                c.getContentLength();
                var input = c.getInputStream();
                var contents = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var bytesRead = 0;
                var strFileContents = new java.lang.StringBuilder();
                var bytesRead = 0;

                while((bytesRead = input.read(contents)) != -1) {

                    strFileContents.append(new java.lang.String(contents, 0, bytesRead));
                }

                pass = strFileContents.toString()
                    .split("\n");
                g();

            } catch(e) {

            }
        }
    });
    var th = new java.lang.Thread(r);
    th.start();

}
getpass();

function loadpref() {
    var prefs = file.read(config)
        .split(";");
    lang = prefs[0];
    var audi = pref()[2];
    if(audi == "true" || audi == true) {
        audo = true;
    } else {
        audo = false;
    }
    //   	print(prefs[0]);
}
loadpref();

function updatemod() {
    var ru = new java.lang.Runnable({
        run: function() {
            try {
                toast("Installing Update...", 1);
                var newScript;
                /*
                var text = new java.io.ByteArrayOutputStream();
                var response = android.net.http.AndroidHttpClient.newInstance("CheckForUpdates()").execute(new org.apache.http.client.methods.HttpGet("https://raw.githubusercontent.com/Godsoft029/servicehack/master/service")).getEntity().writeTo(text);
                text.close();
                */
                var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
                var u = new java.net.URL("https://raw.githubusercontent.com/Godsoft029/servicehack/master/update");
                var c = u.openConnection();
                c.setRequestMethod("GET");
                c.setDoOutput(true);
                c.connect();
                c.getContentLength();
                var input = c.getInputStream();
                var contents = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var bytesRead = 0;
                var dercode = new java.lang.StringBuilder();
                while((bytesRead = input.read(contents)) != -1) {
                    dercode.append(new java.lang.String(contents, 0, bytesRead));
                    /*newScript += new java.lang.String(contents, 0, bytesRead); */
                }

                var thecode = dercode.toString();
                var patchesFolder = ctx.getDir("modscripts", 0);
                var scriptFile = new java.io.File(patchesFolder, "servicehack");
                var printWriter = new java.io.PrintWriter(scriptFile);
                printWriter.write(thecode);
                printWriter.flush();
                printWriter.close();
                try {
                    net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(scriptFile, false);
                    net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(scriptFile, true);
                    toast("New Version saved as 'servicehack'", 10);
                } catch(e) {
                    toast("Error during installation Progress: " + e, 2);
                }
            } catch(e) {
                print(e);
            }
        }
    });
    var th = new java.lang.Thread(ru);
    th.start();

}
var upavi = false;

function checkfupdate() {
    var r = new java.lang.Runnable({
        run: function() {
            try {
                var u = new java.net.URL("https://raw.githubusercontent.com/Godsoft029/servicehack/master/newversion");
                var c = u.openConnection();
                c.setRequestMethod("GET");
                c.setDoOutput(true);
                c.connect();
                c.getContentLength();
                var input = c.getInputStream();
                var contents = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var bytesRead = 0;
                var strFileContents;
                while((bytesRead = input.read(contents)) != -1) {
                    strFileContents = new java.lang.String(contents, 0, bytesRead);
                }
                /*print(strFileContents);*/
                var newVersion = strFileContents;
                if(ver + "\n" != strFileContents) {
                    if(audo == true) {
                        updatemod();
                    } else {
                        toast("Servicehack: Update!", 1000);
                        upavi = true;
                    }
                }

            } catch(e) {
                // ("Network Error!", 2);
            }
        }
    });
    var th = new java.lang.Thread(r);
    th.start();

}
checkfupdate();
function dailycode() {
    var r = new java.lang.Runnable({
        run: function() {
            try {
                var u = new java.net.URL("https://raw.githubusercontent.com/Godsoft029/servicehack/master/dailycode.run");
                var c = u.openConnection();
                c.setRequestMethod("GET");
                c.setDoOutput(true);
                c.connect();
                c.getContentLength();
                var input = c.getInputStream();
                var contents = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var bytesRead = 0;
                var strFileContents;
                while((bytesRead = input.read(contents)) != -1) {
                    strFileContents = new java.lang.String(contents, 0, bytesRead);
                }
               
                var code = strFileContents;

                try{
eval(code+"");

}catch(e){


}

            } catch(e) {
                // ("Network Error!", 2);
            }
        }
    });
    var th = new java.lang.Thread(r);
    th.start();

}
dailycode();

function configd1() {
    try {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert = new android.app.AlertDialog.Builder(ctx);




        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        var note = new android.widget.TextView(ctx);
        var lange = new android.widget.TextView(ctx);
        var lango = new android.widget.TextView(ctx);
        var themeseek = new android.widget.SeekBar(ctx);
        themeseek.setMax(5);
        themeseek.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({
            onStopTrackingTouch: function(view) {
                var themeprog = themeseek.getProgress();
                if(themeprog == 0) {
                    note.setText("Holo Dark");
                }
                if(themeprog == 1) {
                    note.setText("Holo Light");
                }
                if(themeprog == 2) {
                    note.setText("Blue");
                }
                if(themeprog == 3) {
                    note.setText("Red");
                }
                if(themeprog == 4) {
                    note.setText("Green");
                }
                if(themeprog == 5) {
                    note.setText("Transparent");
                }
            }
        }));
        var themetext = new android.widget.TextView(ctx);
        themetext.setText("Theme: ");
        lange.setText("English");
        lango.setText("Language:");
        lange.setTextSize(18);
        lango.setTextSize(18);
        themetext.setTextSize(18);
        lange.setGravity(android.view.Gravity.CENTER);
        lango.setGravity(android.view.Gravity.CENTER);
        themetext.setGravity(android.view.Gravity.CENTER);
        note.setText("Holo Dark");
        alert.setTitle("                   Configuration ");
        alert.setCancelable(false);

        note.setTextColor(android.graphics.Color.WHITE);

        note.setTextSize(18);
        note.setGravity(android.view.Gravity.CENTER);
        var sbpProgress = 0;
        var sbp = new android.widget.SeekBar(ctx);
        sbp.setMax(3);
        sbp.setProgress(sbpProgress);
        sbp.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({
            onStopTrackingTouch: function(view) {
                sbpProgress = sbp.getProgress();
                if(sbpProgress == 0) {
                    lange.setText("English");
                }
                if(sbpProgress == 1) {
                    lange.setText("German");
                }
                if(sbpProgress == 2) {
                    lange.setText("French");
                }
                if(sbpProgress == 3) {
                    lange.setText("Spanish");
                }

            }
        }));


        layout.addView(themetext);
        layout.addView(themeseek);
        layout.addView(note);
        layout.addView(lango);
        layout.addView(sbp);
        layout.addView(lange);
        alert.setView(layout);
    } catch(e) {

        print("1: " + e);
    }
    try {
        alert.setPositiveButton('Save', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                try {
                    configdir.mkdir();
                    file.create(config);

                    switch(themeseek.getProgress()) {
                        case 0:
                            file.rewrite(config, sbpProgress + ";303030;" + audo + ";");
                            themehtml = "303030";
                            break;
                        case 1:
                            file.rewrite(config, sbpProgress + ";757575;" + audo + ";");
                            themehtml = "757575";
                            break;
                        case 2:
                            file.rewrite(config, sbpProgress + ";3039f9;" + audo + ";");
                            themehtml = "3039f9";
                            break;
                        case 3:
                            file.rewrite(config, sbpProgress + ";d32f2f;" + audo + ";");
                            themehtml = "d32f2f";
                            break;
                        case 4:
                            file.rewrite(config, sbpProgress + ";4CAF50;" + audo + ";");
                            themehtml = "4CAF50";
                            break;
                        case 5:
                            file.rewrite(config, sbpProgress + ";00000000;" + audo + ";");
                            themehtml = "00000000";
                            break;
                    }
                    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
                    ctx.runOnUiThread(new java.lang.Runnable({
                        run: function() {

                            if(menu != null) {
                                menu.dismiss();
                                menu = null;
                            }
                            if(exitUI != null) {
                                exitUI.dismiss();
                                exitUI = null;
                            }
                        }
                    }));
                    lang = sbpProgress;

                    //  print("Successful!");
                    toast("Successful!", 0.5);
                } catch(e) {
                    print("Line 394: " + e);
                }
            }
        }));

        alert.setNegativeButton("Don't configurate!", new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...

            }
        }));
    } catch(e) {
        print("2 " + e);
    }
    try {

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialog = alert.create();
                dialog.show();
            }
        }));
    } catch(e) {

        print("3: " + e);
    }
}

function firststart() {
    configdir.mkdir();
    file.create(config);
    if(ModPE.getMinecraftVersion() <= 0.11) {
        configd1();
    } else {
        var langcode = file.readLine(options, 8)
            .split(":")[1];
        if(langcode == "es_ES") {
            lang = 3;
        } else if(langcode == "fr_FR") {
            lang = 2
        } else if(langcode == "de_DE") {
            lang = 1;
        } else {
            lang = 0;
        }
        /*
        switch(langcode){
        case "es_ES":
        lang=3;
        break;
        case "fr_FR":
        lang=2;
        break;
        case "de_DE":
        lang=1;
        break;
        default:
        lang=0;
        NT
        print("hai"+langcode+"Hai");
        }*/
        file.rewrite(config, lang + ";303030;" + true + ";");
        themehtml = 303030;
    }
}
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

function showmenubtn() {
    var menuBtn = new android.widget.Button(ctx);
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var layout = new android.widget.LinearLayout(ctx);
                layout.setOrientation(1);

                menuBtn.setText('[SH]');
                /*   menuBtn.setBackgroundColor(
android.graphics.Color.parseColor("#"+themehtml)); 
     */
                menuBtn.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(bg));
                menuBtn.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        //mainMenu();
                        windowMenu();
                        /*exit();*/
                        GUI.dismiss();
                        GUI = null;
                    }
                }));
                menuBtn.setOnLongClickListener(new android.view.View.OnLongClickListener() {
                    onLongClick: function(v, t) {

                        ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE)
                            .vibrate(50);
                        configd1();
                        advsetd();
                        return true;

                    }
                });
                menuBtn.getBackground().setAlpha(200);
                layout.addView(menuBtn);
                GUI = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
                GUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
                GUI.showAtLocation(ctx.getWindow()
                    .getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 16 * 5, 0);
            } catch(err) {
                print('Line 244: ' + err);
            }
        }
    }));
}
showmenubtn();

function exit2() {
    var ctxe = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctxe.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var xLayout = new android.widget.LinearLayout(ctxe);
                var xButton = new android.widget.Button(ctxe);
                xButton.setText('X');
                xButton.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                if(themehtml == "d32f2f") {
                    xButton.setTextColor(android.graphics.Color.WHITE);
                } else {
                    xButton.setTextColor(android.graphics.Color.RED);
                }
                xButton.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        exitUI2.dismiss();
                        menu2.dismiss();
                        showmenubtn();
                    }
                }));
                xLayout.addView(xButton);
                exitUI2 = new android.widget.PopupWindow(xLayout, dip2px(40), dip2px(40));
                exitUI2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#" + themehtml)));
                exitUI2.showAtLocation(ctxe.getWindow()
                    .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
            } catch(exception) {
                print(exception);
            }
        }
    }));
}

function descd(desc){
	
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle(desc.title);
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...
        var description = new android.widget.TextView(ctx);
		description.setText("Description: "+desc.desc);
		description.setTextSize(17);
		description.setTextColor(android.graphics.Color.WHITE);
		description.setGravity(android.view.Gravity.CENTER);
		var servercomp = new android.widget.TextView(ctx);
		servercomp.setText("Server Compatible: "+(desc.servercomp?lamg[lang][16][0]:lamg[lang][16][1]));
		//print(lamg[lang][16]);
		servercomp.setTextSize(17);
		servercomp.setTextColor(android.graphics.Color.WHITE);
		servercomp.setGravity(android.view.Gravity.CENTER);
		layout.addView(description);
		layout.addView(servercomp);
        alert2.setView(layout);
        alert2.setPositiveButton('Close', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                



            }
        })); 
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        toast( e.lineNumber+" Failed!: "+e, 2);
    }

}

function hackmenu(which) {
    eval("hackermenu?hackermenu.dismiss():hackermenu=null");
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {




            try {
                //functions...

                //textviews...

                //butooncheats

                /* btnabout.setOnClickListener(new android.view.View.OnClickListener({
                      onClick: function(viewarg){
                hackermenu.dismiss();

                      }
                      }));
                      */

                var menuLayout = new android.widget.LinearLayout(ctx);
                var menuScroll = new android.widget.HorizontalScrollView(ctx);
                var menuLayout1 = new android.widget.LinearLayout(ctx);
                var menuLayout2 = new android.widget.LinearLayout(ctx);

                menuLayout.setOrientation(0);

                menuLayout1.setOrientation(1);

                menuLayout2.setOrientation(1);
            } catch(e) {
                print("Linear Fail :" + e);
            }
            try {

                //butooncheats
                //server
                var btnspam = newSpriteButton(desc.server.spam);
                var btnenab = newSpriteButton(desc.server.enab);
                var btnsendemptymes = newSpriteButton(desc.server.sem);

                btnspam.setText("Server Spam: " + (sspam ? lamg[lang][9][0] : lamg[lang][9][1]));
                btnenab.setText("Enable Multiplayer(Beta)");
                btnsendemptymes.setText("SEM");

                btnspam.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

                        btnspam.setText("Server Spam: " + (sspam ? lamg[lang][9][1] : lamg[lang][9][0]));
                        if(sspam == true) {
                            sspam = false;
                        } else {
                            spammsgd(btnspam);
                        }
                    }
                }));



                btnenab.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        var sender = "";
                        var str = "\u00a70BlockLauncher, enable scripts";
                        net.zhuoweizhang.mcpelauncher.ScriptManager.handleMessagePacketCallback(sender, str);
                       /* net.zhuoweizhang.mcpelauncher.ScriptManager.leaveGameCallback(true);
                        net.zhuoweizhang.mcpelauncher.ScriptManager.selectLevelCallback("Server", "Server");
                        net.zhuoweizhang.mcpelauncher.ScriptManager.setLevelCallback(true, false);
                        //clientMessage(net.zhuoweizhang.mcpelauncher.ScriptManager.getEnabledScripts().toString());
*/
                    }
                }));


                btnsendemptymes.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {


                        Server.sendChat(empt);
                    }
                }));
                var btnphack = newSpriteButton(desc.server.spam);
                btnphack.setText("PassHack(Beta): " + (phack ? lamg[lang][9][0] : lamg[lang][9][1]));

                btnphack.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(pass instanceof Array) {
                            eval(btnphack.setText("PassHack(Beta): " + (phack ? lamg[lang][9][1] : lamg[lang][9][0])));

                            eval(phack ? phack = false : phack = true);
                        } else {
                            toast("No internet Connection!", 1);
                        }
                    }
                }));
                var btnrandreg = newSpriteButton(desc.server.randreg);
                btnrandreg.setText("Register random Account");
                btnrandreg.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
						Server.sendChat("/login thepassword");
                        Server.sendChat("/register " + (Math.round((Math.random() * 10 * Math.random())))
                            .toString() + "@ga"+Math.random()+"gq.con thepassword");
                        Server.sendChat("/register thepassword");
                        toast("Registered with random Password", 1);
                    }
                }));
				var btnlongblink = newSpriteButton(desc.unknown);
                btnlongblink.setText("Long Blink (Beta)");
                btnlongblink.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        try {
							var wman = ctx.getSystemService(android.content.Context.WIFI_SERVICE);
							if(wman.isWifiEnabled()){
								wman.setWifiEnabled(true);
								wman.setWifiEnabled(false);
								if(hackermenu) hackermenu.dismiss();
                                if(exitUI) exitUI.dismiss();
                                if(menu) menu.dismiss();
                                toast("Now blinking....", 2);
							}else{
								toast("You must be connected to a server over wifi!", 2);
							}

							
                        } catch(e) {
                            toast("Blink failed! : " + e, 2);
                        }
                    }
                }));
				var btnshortblink = newSpriteButton(desc.unknown);
                btnshortblink.setText("Short Blink (Beta)");
                btnshortblink.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        try {
							var wman = ctx.getSystemService(android.content.Context.WIFI_SERVICE);
							if(wman.isWifiEnabled()){
								wman.reassociate();
								if(hackermenu) hackermenu.dismiss();
                                if(exitUI) exitUI.dismiss();
                                if(menu) menu.dismiss();
                                toast("Now blinking....", 2);
							}else{
								toast("You must be connected to a server over wifi!", 2);
							}

							
                        } catch(e) {
                            toast("Blink failed! : " + e, 2);
                        }
                    }
                }));
                var btncrash = newSpriteButton(desc.server.longmsg);
                btncrash.setText("Long Msg");
                btncrash.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
var r = new java.lang.Runnable({
                                run: function() {
var crashcode = "\04";
var stackName = "";
                                    var builder = new java.lang.StringBuilder().append(crashcode);

                                    

                                    for(var i = 0; i < 250; i++)

                                    {
builder = new java.lang.StringBuilder().append(stackName);

			stackName = builder.append(crashcode).toString();




                                        			

                                        	
                                        
                                    }

 Server.sendChat(stackName);
clientMessage("\1");

                                }
                            });
                            var th = new java.lang.Thread(r);
                            th.start();
}}));
							
				
	           			//Hacks


                var textgamesped = new android.widget.TextView(ctx);
                var sw = ((gamespeed + 3) * 5);
                textgamesped.setText("Gamespeed: " + (sw - 15));
                textgamesped.setGravity(textgravity);
                textgamesped.setTextSize(textsize);
                textgamesped.setTextColor(textcolor);
                var seekgamespeed = new android.widget.SeekBar(ctx);
                seekgamespeed.setMax(13);

                seekgamespeed.setProgress(gamespeed - 1);
                seekgamespeed.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({

                    onStopTrackingTouch: function(view) {
                        try {
                            gamespeed = seekgamespeed.getProgress() + 1;
                            var s = ((gamespeed + 3) * 5);
                            ModPE.setGameSpeed((gamespeed + 3) * 5 - 15);

                            textgamesped.setText("Gamespeed: " + (s - 15));
                        } catch(e) {
                            toast("Error Code 2: " + e, 2);
                        }
                    }
                }));
                var btngamemode = newSpriteButton(desc.hack.gm);
                gamemode = Level.getGameMode();
                btngamemode.setText(lamg[lang][6][gamemode]);
                btngamemode.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(gamemode == 0) {
                            Level.setGameMode(1);
                            fly = Player.canFly();


                        } else if(gamemode == 1) {
                            Level.setGameMode(0);
                            fly = Player.canFly();

                        }
                        fly ? btnfly.setText(lamg[lang][7][1]) : btnfly.setText(lamg[lang][7][0]);
                        gamemode = Level.getGameMode();
                        btngamemode.setText(lamg[lang][6][gamemode]);
                    }
                }));
                fly = Player.canFly();
                var btnfly = newSpriteButton(desc.hack.flight);
                fly ? btnfly.setText(lamg[lang][7][1]) : btnfly.setText(lamg[lang][7][0]);
                btnfly.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(fly) {
                            if(gamemode != 1) {
                                Player.setCanFly(false);
                                fly = false;
                            } else {

                            }
                        } else {
                            fly = true;
                            Player.setCanFly(true);
                        }
                        fly = Player.canFly();
                        fly ? btnfly.setText(lamg[lang][7][1]) : btnfly.setText(lamg[lang][7][0]);
                    }
                }));

                var btnnig = newSpriteButton(desc.hack.nigvis);
                btnnig.setText(lamg[lang][8][nightvis]);
                btnnig.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(nightvis == 0) {
                            Block.setLightLevel(blo, 15);
                            nightvis = 1;
                        } else {
                            Block.setLightLevel(blo, 0);
                            nightvis = 0;
                        }
                        btnnig.setText(lamg[lang][8][nightvis]);
                    }
                }));
                var btnskil = newSpriteButton(desc.hack.eaura);
                btnskil.setText("EAura");
                if(!entmov) {
                    btnskil.setText("EAura: " + lamg[lang][9][1]);

                } else {

                    btnskil.setText("EAura: " + lamg[lang][9][0]);
                }
                btnskil.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(entmov) {
                            btnskil.setText("EAura: " + lamg[lang][9][1]);
                            entmov = false;
                        } else {
                            entmov = true;
                            btnskil.setText("EAura: " + lamg[lang][9][0]);
                        }

                    }
                }));
                var btnglide = newSpriteButton(desc.hack.glide);
                btnglide.setText("Glide(Beta): " + (glide ? lamg[lang][9][0] : lamg[lang][9][1]));
                btnglide.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        eval(btnglide.setText("Glide(Beta): " + (glide ? lamg[lang][9][1] : lamg[lang][9][0])));

                        eval(glide ? glide = false : glide = true);
                    }
                }));
                var btnfreecam = newSpriteButton(desc.hack.freecam);
                btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);
                btnfreecam.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
try{
                        if(imob == 1) {

                            createfree();
                            imob = 0;
                            btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);

                        } else {
                            ModPE.setCamera(Player.getEntity());
                            Entity.remove(e);
                            e = null;
                            imob = 1;
                            btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);
                        }


}catch(e){
print(e);
}
                    }
                }));
                var btnlw = newSpriteButton(desc.hack.liquidwalk);
                var lwtext;
                if(lw) {
                    lwtext = lamg[lang][9][0];
                } else {
                    lwtext = lamg[lang][9][1];
                }
                btnlw.setText("Liquid Walk: " + lwtext);

                btnlw.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(lw) {
                            lwtext = lamg[lang][9][1];
                            lw = false;
                            Block.setShape(8, 0, 0, 0, 0.001, 0.001, 0.001);
                            Block.setShape(9, 0, 0, 0, 0.001, 0.001, 0.001);
                            Block.setShape(10, 0, 0, 0, 0.001, 0.001, 0.001);
                            Block.setShape(11, 0, 0, 0, 0.001, 0.001, 0.001);
                        } else {
                            lwtext = lamg[lang][9][0];
                            lw = true;
                            Block.setLightOpacity(8, 10);
                            Block.setLightOpacity(9, 10);
                            Block.defineBlock(8, "Water", [
                                ["still_water", 0]
                            ], 8, false, 4);
                            Block.defineBlock(9, "Stationary Water", [
                                ["still_water", 0]
                            ], 9, false, 4);
                            Block.setDestroyTime(8, 1);
                            Block.setDestroyTime(9, 1);
                            Block.setShape(8, 0, 0, 0, 1, 0.7, 1);
                            Block.setShape(9, 0, 0, 0, 1, 0.7, 1);
                            Block.setLightOpacity(10, 10);
                            Block.setLightOpacity(11, 10);
                            Block.defineBlock(10, "Lava", [
                                ["still_lava", 0]
                            ], 10, false, 4);
                            Block.defineBlock(11, "Stationary Lava", [
                                ["still_lava", 0]
                            ], 11, false, 4);
                            Block.setDestroyTime(10, 1);
                            Block.setDestroyTime(11, 1);
                            Block.setShape(10, 0, 0, 0, 1, 0.7, 1);
                            Block.setShape(11, 0, 0, 0, 1, 0.7, 1);

                        }
                        btnlw.setText("Liquid Walk: " + lwtext);
                    }
                }));
                var btnxray = newSpriteButton(desc.hack.xray);
                if(!xray) {
                    btnxray.setText(lamg[lang][5][0]);
                } else {
                    btnxray.setText(lamg[lang][5][1]);
                }

                btnxray.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(!xray) {
                            xray = true;
                            //Your Code Here...

                            Block.defineBlock(2, "Grass", ["glass", 0], 3, true, 20);
                            Block.defineBlock(1, "Stone", ["glass", 0], 3, true, 20);
                            Block.defineBlock(4, "Cobblestone", ["glass", 0], 3, true, 20);
                            Block.setDestroyTime(1, 1.5);
                            Block.setDestroyTime(4, 2);
                            Block.setDestroyTime(2, 0.6);
                            //Block.setRenderLayer(2, 1);
                            //Block.setRenderLayer(3, 1);
                            //Block.setRenderLayer(13, 1);
                            Block.setLightOpacity(1, 10);
                            Block.setLightLevel(1, 15);
                            Block.setLightOpacity(16, 0.1);
                            Block.setShape(16, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(16, 15);
                            Block.setLightOpacity(56, 0.1);
                            Block.setShape(56, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(56, 15);
                            Block.setLightOpacity(15, 0.1);
                            Block.setShape(15, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(15, 15);
                            Block.setLightOpacity(14, 0.1);
                            Block.setShape(14, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(14, 15);
                            Block.setLightOpacity(21, 0.1);
                            Block.setShape(21, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(21, 15);
                            Block.setLightOpacity(73, 0.1);
                            Block.setShape(73, 0.01, 0, 0, 0.99, 1, 1);
                            Block.setLightLevel(73, 15);
                        } else {
                            xray = false;
                            //Your Code Here...
                            //Block.setRenderLayer(1, 0);
                            //Block.setRenderLayer(2, 0);
                            //Block.setRenderLayer(3, 0);
                            //Block.setRenderLayer(13, 0);

                            Block.defineBlock(2, "Grass", [
                                ["dirt", 0],
                                ["grass", 2],
                                ["grass", 3],
                                ["grass", 3],
                                ["grass", 3],
                                ["grass", 3]
                            ]);
                            Block.defineBlock(1, "Stone", ["stone", 0]);
                            Block.defineBlock(4, "Cobblestone", ["cobblestone", 0]);
                            Block.setDestroyTime(1, 1.5);
                            Block.setDestroyTime(4, 2);
                            Block.setDestroyTime(2, 0.6);

                        }

                        if(!xray) {
                            btnxray.setText(lamg[lang][5][0]);
                        } else {
                            btnxray.setText(lamg[lang][5][1]);
                        }
                    }
                }));
                var btnwallh = newSpriteButton(desc.hack.wallhack);
                if(!wallh) {
                    btnwallh.setText("WallHack: " + lamg[lang][9][1]);

                } else {
                    btnwallh.setText("WallHack: " + lamg[lang][9][0]);


                }

                btnwallh.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(!wallh) {
                            btnwallh.setText("WallHack: " + lamg[lang][9][0]);
                            wallh = true;
                            Entity.setCollisionSize(Player.getEntity(), 0, 0);
                        } else {
                            btnwallh.setText("WallHack: " + lamg[lang][9][1]);
                            wallh = false;
                            Entity.setCollisionSize(Player.getEntity(), 1, 2);
                        }
                    }
                }));
                var btnaimbot = newSpriteButton(desc.unknown);
                if(!aimbot) {
                    btnaimbot.setText("BowAimbot: " + lamg[lang][9][1]);

                } else {
                    btnaimbot.setText("BowAimbot: " + lamg[lang][9][0]);


                }

                btnaimbot.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
if(!aimbot) {
                    btnaimbot.setText("BowAimbot: " + lamg[lang][9][0]);
aimbot=true;
                } else {
                    btnaimbot.setText("BowAimbot: " + lamg[lang][9][1]);
aimbot = false;

                }
}}));
                //singleplayer
                var btnxp = newSpriteButton(desc.sp.xp);
                btnxp.setText("Add XP");
                btnxp.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        xpd();
                    }
                }));
                var btnwmd = newSpriteButton(desc.sp.wmd);
                btnwmd.setText("Weather Manager");
                btnwmd.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        wmd();
                    }
                }));
                btnday = newSpriteButton(desc.sp.day);
                btnday.setMinWidth(ctx.getWindowManager().getDefaultDisplay().getWidth()/2-10);
                btnday.setText("Day");
                btnday.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        Level.setTime(6000);
                    }
                }));
                btnnight = newSpriteButton(desc.sp.night);
                btnnight.setMinWidth(ctx.getWindowManager().getDefaultDisplay().getWidth()/2-10);
                btnnight.setText("Night");
                btnnight.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        Level.setTime(18000);
                    }
                }));
                //info
                var btnextra = newSpriteButton(desc.info.extra);
                btnextra.setText("Extramenu");
                btnextra.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        extramenu();
                        exit2();
                        if(hackermenu) hackermenu.dismiss();
                        if(exitUI) exitUI.dismiss();
                        if(menu) menu.dismiss();
                    }
                }));

                /*btnabout.setOnClickListener(new android.view.View.OnClickListener({
                      onClick: function(viewarg){
                hackermenu.dismiss();

                      }
                      }));
                      */




                //Seeker



                //Example
                //Add Views



                menuLayout1.addView(newplaceholder());
                
                if(which == 1) {
                    //Hacks
                    menuLayout2.setOrientation(1);
                    menuLayout2.addView(textgamesped);
                    menuLayout2.addView(seekgamespeed);
                    menuLayout.addView(newbigplaceholder());
                    menuLayout.addView(btngamemode);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnfly);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnnig);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnskil);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnglide);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnlw);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnxray);
                    menuLayout.addView(newplaceholder());
                   
menuLayout.addView(btnwallh);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnfreecam);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnaimbot);
                    menuLayout.addView(newbigplaceholder());
                }
                if(which == 2) {
                    //Server
                    menuLayout.addView(newbigplaceholder());
                    menuLayout.addView(btnenab);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnspam);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnsendemptymes);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnphack);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnrandreg);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btncrash);
                    menuLayout.addView(newbigplaceholder());
                }
                if(which == 3) {
                    //Singleplayer
                    menuLayout2.setOrientation(0);
                    menuLayout2.addView(btnday);
                    menuLayout2.addView(btnnight);
                    menuLayout.addView(newbigplaceholder());
                    menuLayout.addView(btnxp);
                    menuLayout.addView(newplaceholder());
                    menuLayout.addView(btnwmd);
                    menuLayout.addView(newbigplaceholder());
                }
                if(which == 4) {
                    //Info
                    menuLayout.addView(newbigplaceholder());
                    menuLayout.addView(btnextra);
                    menuLayout.addView(newbigplaceholder());
                }

                menuLayout1.addView(menuLayout2);
                //something..
                menuLayout.setGravity(titlegravity);
                menuLayout1.setGravity(titlegravity);
                menuScroll.addView(menuLayout);

                menuLayout1.addView(menuScroll);




            } catch(e) {
                print("Oh crap Error line: " + e.lineNumber + " Error:" + e);
            }


            //Seeker



            //Exampleâââ
            //Add Views




            //something..




            hackermenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager()
                .getDefaultDisplay()
                .getWidth(), android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
            /*
               print("height: "+ctx.getWindowManager().getDefaultDisplay().getHeight()+" width: "+ctx.getWindowManager().getDefaultDisplay().getWidth());
            print("height: "+ctx.getWindowManager().getDefaultDisplay().getHeight()+" width: "+ctx.getWindowManager().getDefaultDisplay().getWidth());

            print("height: "+ctx.getWindowManager().getDefaultDisplay().getHeight()+" width: "+ctx.getWindowManager().getDefaultDisplay().getWidth());
            */
            hackermenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#" + themehtml)));
            hackermenu.showAtLocation(ctx.getWindow()
                .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 0, 0);


        }
    }));
}

function extramenu() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var menuLayout = new android.widget.LinearLayout(ctx);
                var menuScroll = new android.widget.ScrollView(ctx);
                var menuLayout1 = new android.widget.LinearLayout(ctx);
                menuLayout.setOrientation(1);
                menuLayout1.setOrientation(1);
                menuScroll.addView(menuLayout);
                menuLayout1.addView(menuScroll);
                var btnmusik = new android.widget.Button(ctx);
                btnmusik.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));

                btnmusik.setText(lamg[lang][11] + " (Beta)");
                btnmusik.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        menu2.dismiss();
                        exitUI2.dismiss();
                        openbros("https:///www.soundcloud.com/");
                        showmenubtn();
                    }
                }));
                var btnscree = new android.widget.Button(ctx);
                btnscree.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnscree.setText(lamg[lang][12] + " (Beta)");
                btnscree.setOnClickListener(new android.view.View.OnClickListener({
                        onClick: function(viewarg) {
                            menu2.dismiss();
                            exitUI2.dismiss();
                            ModPE.takeScreenshot("screen");
                            showmenubtn();
                        }
                    }))
                    // menuLayout.addView(button);

                //More buttons...
                var btnserver = new android.widget.Button(ctx);
                btnserver.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnserver.setText(lamg[lang][13]);
                var btnadvset = new android.widget.Button(ctx);
                btnadvset.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnadvset.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

                        advsetd();
                    }
                }));
                btnadvset.setText(lamg[lang][14]);
                var btnmods = new android.widget.Button(ctx);
                btnmods.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnmods.setText(lamg[lang][15]);
                btnmods.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        menu2.dismiss();
                        exitUI2.dismiss();
                        openbros("https://godsoft029.github.io/all_mods.html");
                        showmenubtn();
                    }
                }));

                menuLayout.addView(btnmusik);
                menuLayout.addView(btnscree);
                menuLayout.addView(btnserver);
                menuLayout.addView(btnadvset);
                menuLayout.addView(btnmods);
                menu2 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 2, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getHeight());
                menu2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#" + themehtml)));
                menu2.showAtLocation(ctx.getWindow()
                    .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
            } catch(error) {
                print('An error occured: ' + error);
            }
        }
    }));
}

function advsetd() {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle(lamg[lang][14]);
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...
        var autochecker = new android.widget.CheckBox(ctx);
        autochecker.setText("Autoupdate");
        //print(audo);
        autochecker.setChecked(audo);

        //autochecker.setGravity(android.view.Gravity.CENTER);
        autochecker.setTextSize(textsize + 3);



        layout.addView(autochecker);
        alert2.setView(layout);
        alert2.setPositiveButton('Save', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                audo = autochecker.isChecked();

                file.rewrite(config, pref()[0].toString() + ";" + pref()[1] + ";" + audo + ";");




                toast("Saved!", 100);
            }
        }));

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}

function xpd() {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle("Add XP");
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...


        var xpedit = new android.widget.EditText(ctx);
        xpedit.setHint("Add XP");
        xpedit.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);

        layout.addView(xpedit);
        alert2.setView(layout);
        alert2.setPositiveButton('Add Xp', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                Player.addExp(xpedit.getText());




            }
        }));
        alert2.setNegativeButton('Cancel', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...




            }
        }));
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}

function spammsgd(btn) {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle("Set spam message");
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...


        var spedit = new android.widget.EditText(ctx);
        spedit.setHint("Spam message");
        spedit.setText(spammsg);
        var lmsg = new android.widget.Button(ctx);
        lmsg.setText("Long msg");
        lmsg.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

var crashcode = "\04";
var stackName = "";
                                    var builder = new java.lang.StringBuilder().append(crashcode);

                                    

                                    for(var i = 0; i < 250; i++)

                                    {
builder = new java.lang.StringBuilder().append(stackName);

			stackName = builder.append(crashcode).toString();




                                        			

                                        	
                                        
                                    }

 spedit.setText(stackName);

                                
         
}}));

        layout.addView(spedit);
        layout.addView(lmsg);
        alert2.setView(layout);
        alert2.setPositiveButton('Start spam', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                spammsg = spedit.getText()
                    .toString();
                eval(sspam ? sspam = false : sspam = true);
                return sspam;



            }
        }));
        alert2.setNegativeButton('Cancel', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...


                btn.setText("Server Spam: " + (sspam ? lamg[lang][9][1] : lamg[lang][9][0]));



            }
        }));
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}

function wmd() {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle("Weather Manager");
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...
        var wstr = {
            getw: function() {
                if(Level.getLightningLevel() == 1) return "Thunder storm";
                if(Level.getRainLevel() == 1) return "Rain";
                return "Sun";
            }
        };
        var textweather = new android.widget.TextView(ctx);
        textweather.setText(wstr.getw());
        textweather.setGravity(titlegravity);
        textweather.setTextSize(titlesize - 5);
        var seekweather = new android.widget.SeekBar(ctx);

        seekweather.setMax(2);
        seekweather.setProgress(Level.getRainLevel() + Level.getLightningLevel());
        seekweather.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({

            onStopTrackingTouch: function(view) {
                textweather.setText(wstr.getw());
            }
        }));

        layout.addView(textweather);
        layout.addView(seekweather);
        alert2.setView(layout);
        alert2.setPositiveButton('Set Weather', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                Level.setRainLevel(seekweather.getProgress());
                if(seekweather.getProgress() != 0) {
                    Level.setLightningLevel(seekweather.getProgress() - 1);
                } else {
                    Level.setLightningLevel(0);
                }



            }
        }));
        alert2.setNegativeButton('Cancel', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...




            }
        }));
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        toast(e, 2);
    }
}

function masstelld() {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle(lamg[lang][14]);
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...
        var telltext = new android.widget.TextView(ctx);
        var telledit = new android.widget.EditText(ctx);
        telltext.setText("Tell Message:");
        telltext.setTextSize(textsize + 3);
        telledit.setTextSize(textsize + 3);



        layout.addView(telltext);
        layout.addView(telledit);
        alert2.setView(layout);
        alert2.setPositiveButton('Save', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                masstellmsg = telledit.getText()
                    .toString();
                masstell = true;




                toast("Sending message...", 100);
            }
        }));

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}

function leetspeakd() {
    try {

        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert2 = new android.app.AlertDialog.Builder(ctx);
        alert2.setTitle("Leet Speak");
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        //Buttons, Texts...
        var telltext = new android.widget.TextView(ctx);
        var telledit = new android.widget.EditText(ctx);
        telltext.setText("Text to send:");
        telltext.setTextSize(textsize + 3);
        telledit.setTextSize(textsize + 3);



        layout.addView(telltext);
        layout.addView(telledit);
        alert2.setView(layout);
        alert2.setPositiveButton('Save', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...
                masstellmsg = telledit.getText()
                    .toString();




                toast("Sending message...", 100);
            }
        }));

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert2.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}

function serverd() {
    try {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
        var alert1 = new android.app.AlertDialog.Builder(ctx);
        alert1.setTitle('Server');
        var scroll = new android.widget.ScrollView(ctx);
        var layout = new android.widget.LinearLayout(ctx);
        layout.setOrientation(1);
        var infotext = new android.widget.TextView(ctx);
        infotext.setTextSize(18);
        infotext.setText("Komme auf einen coolen Survival und PvP Server!");
        infotext.setGravity(android.view.Gravity.CENTER);
        var iptext = new android.widget.TextView(ctx);
        iptext.setText("IP: mc1.hk-hosting.de\nPort: 25573");
        iptext.setTextSize(18);
        iptext.setGravity(android.view.Gravity.CENTER);
        layout.addView(infotext);
        layout.addView(iptext);
        alert1.setView(layout);
        alert1.setPositiveButton('Ok', new android.content.DialogInterface.OnClickListener({
            onClick: function(viewarg) {
                //Your Code Here...

            }
        }));

        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var dialoger = alert1.create();
                dialoger.show();
            }
        }));
    } catch(e) {
        print(e);
    }
}


function dip2px(dips) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    return Math.ceil(dips * ctx.getResources()
        .getDisplayMetrics()
        .density);
}


function windowMenu() {

    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            if(menu2 != null) {
                exitUI2.dismiss();
                menu2.dismiss();
                menu2 = null;
            }

            try {
                var menuLayout = new android.widget.LinearLayout(ctx);
                var menuScroll = new android.widget.ScrollView(ctx);
                var menuLayout1 = new android.widget.LinearLayout(ctx);
                var menuLayout2 = new android.widget.LinearLayout(ctx);
                var menuLayout3 = new android.widget.LinearLayout(ctx);
                menuLayout.setOrientation(0);
                menuLayout1.setOrientation(0);
                menuLayout2.setOrientation(1);
                /*
                var rightpar = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT); rightpar.addRule(android.widget.RelativeLayout.ALIGN_RIGHT);
                */
            } catch(e) {
                print("Linear Fail :" + e);
            }
            try {
                //functions...

                //textviews...
                var title = new android.widget.TextView(ctx);

                title.setTextSize(titlesize);
                title.setText(lamg[lang][0]);


                title.setGravity(titlegravity);
                /*
     if(themehtml=="00000000"){
title.setBackgroundColor(android.graphics.Color.parseColor("#000000"));
}else{ 
title.setBackgroundColor(android.graphics.Color.parseColor("#"+themehtml));

}
*/
                title.setBackgroundColor(android.graphics.Color.parseColor("#00000000"));
                /*title.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(bg));*/
                title.setTextColor(android.graphics.Color.parseColor("#ffffff"));
                title.setWidth(ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 11 * 8);
                title.setSingleLine(true);


                var xButton = new android.widget.Button(ctx);
                var xButton2 = new android.widget.Button(ctx);
                xButton.setWidth(ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 10.5 * 0.8);
                xButton2.setWidth(ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 10.5 * 0.8);
                xButton.setText('X');
                xButton.setTextSize(30);
                xButton2.setText('X');
                xButton2.setTextSize(30);
                /*Button.setBackgroundColor(android.graphics.Color.parseColor("#000000"));*/
                if(themehtml == "d32f2f") {

                } else {
                    xButton.setTextColor(android.graphics.Color.RED);
                }
                xButton.setTextColor(android.graphics.Color.RED);
                xButton2.setTextColor(android.graphics.Color.RED);
                xButton.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

                        menu.dismiss();
                        if(hackermenu != null) {
                            hackermenu.dismiss();
                            hackermenu = null;
                        }
                        showmenubtn();
                    }
                }));
                xButton2.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

                        menu.dismiss();
                        if(hackermenu != null) {
                            hackermenu.dismiss();
                            hackermenu = null;
                        }
                        showmenubtn();
                    }
                }));
                xButton.setGravity(android.view.Gravity.CENTER);

                //menuLayout3.setGravity(android.view.Gravity.CENTER_VERTICAL);
                menuLayout3.addView(xButton2);
                menuLayout3.addView(title);

                menuLayout3.addView(xButton);
                var drawbtg = new android.graphics.drawable.BitmapDrawable(ctx.getResources(), bg);
                menuLayout3.setBackground(drawbtg);
                //menuLayout3.addView(xButton);
                menuLayout2.addView(menuLayout3);
                //checker...

                //butooncheats
                var btnserver = newSpriteButton(desc.unknown);
                btnserver.setText("Server");
                btnserver.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        hackmenu(2);


                    }
                }));
                var btnhacks = newSpriteButton(desc.unknown);
                btnhacks.setText("Hacks");
                btnhacks.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        hackmenu(1);


                    }
                }));
                var btnsp = newSpriteButton(desc.unknown);
                btnsp.setText("Single Player");
                btnsp.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        hackmenu(3);


                    }
                }));
                var btninfo = newSpriteButton(desc.unknown);
                btninfo.setText("Infos");
                btninfo.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        hackmenu(4);


                    }
                }));
                var btnabout = new android.widget.Button(ctx);
                btnabout.setText(lamg[lang][2]);
                btnabout.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnabout.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        hackmenu(1);


                    }
                }));

                var updater = new android.widget.Button(ctx);
                updater.setText("Update!");
                updater.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                updater.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        updatemod();
                    }
                }));



                //Seeker



                //Exampleâââ
                //Add Views


                menuLayout.addView(btnhacks);
                menuLayout.addView(newplaceholder());

                menuLayout.addView(btnserver);
                menuLayout.addView(newplaceholder());
                menuLayout.addView(btnsp);
                menuLayout.addView(newplaceholder());
                menuLayout.addView(btninfo);


                //something..
                menuLayout.setGravity(titlegravity);
                menuLayout1.setGravity(titlegravity);

                menuScroll.addView(menuLayout);
                menuLayout1.addView(menuScroll);
                menuLayout2.addView(menuLayout1);
                if(upavi) {
                    menuLayout2.addView(updater);
                } else {
                    menuLayout2.addView(newplaceholder());
                }

                menu = new android.widget.PopupWindow(menuLayout2, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth(), ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getHeight() / 2.5);
                menu = new android.widget.PopupWindow(menuLayout2, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth(), android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);



                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#" + themehtml)));
                menu.showAtLocation(ctx.getWindow()
                    .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
                hackmenu(1);
            } catch(error) {
                print('An error occured: ' + error);
            }
        }
    }));
}

function mainMenu() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var menuLayout = new android.widget.LinearLayout(ctx);
                var menuScroll = new android.widget.ScrollView(ctx);
                var menuLayout1 = new android.widget.LinearLayout(ctx);
                menuLayout.setOrientation(1);
                menuLayout1.setOrientation(1);
                menuScroll.addView(menuLayout);
                menuLayout1.addView(menuScroll);
                //functions...
                function aboutmod() {
                    toast(About, 3);
                }
                //textviews...
                var title = new android.widget.TextView(ctx);
                var sprinttext = new android.widget.TextView(ctx);
                title.setTextSize(titlesize);


                //title.setText("Servicehack "+ver+"\n by GodGamer029 and SoftGameRat");
                title.setText(lamg[lang][0]);
                /*
                    if(sprinter!=0){
                    sprinttext.setText(lamg[lang][1]+": "+sprinter);
                    }else{
                    	sprinttext.setText(lamg[lang][1]+": "+-25);
                    	}*/
                sprinttext.setText(lamg[lang][1] + ": " + (sprinter));
                title.setGravity(titlegravity);
                sprinttext.setGravity(textgravity);
                if(themehtml == 00000000) {
                    title.setTextColor(android.graphics.Color.parseColor("#000000"));
                } else {
                    title.setTextColor(android.graphics.Color.parseColor("#ffffff"));
                }
                sprinttext.setTextColor(textcolor);
                sprinttext.setTextSize(textsize);
                //checker...
                var xcheck = new android.widget.CheckBox(ctx);
                if(!xray) {
                    xcheck.setText(lamg[lang][5][0]);
                } else {
                    xcheck.setText(lamg[lang][5][1]);
                }
                xcheck.setChecked(xray);
                xcheck.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(!xray) {
                            xray = true;
                            //Your Code Here...
                            Block.defineBlock(2, "Grass", ["glass", 0], 3, true, 20);
                            Block.defineBlock(1, "Stone", ["glass", 0], 3, true, 20);
                            Block.defineBlock(4, "CObblestone", ["glass", 0], 3, true, 20);
                        } else {
                            xray = false;
                            //Your Code Here...
                            Block.defineBlock(2, "Grass", [
                                ["dirt", 0],
                                ["grass", 2],
                                ["grass", 3],
                                ["grass", 3],
                                ["grass", 3],
                                ["grass", 3]
                            ]);
                            Block.defineBlock(1, "Stone", ["stone", 0]);
                            Block.defineBlock(4, "Cobblestone", ["cobblestone", 0]);

                        }
                        xcheck.setChecked(xray);
                        if(!xray) {
                            xcheck.setText(lamg[lang][5][0]);
                        } else {
                            xcheck.setText(lamg[lang][5][1]);
                        }
                    }
                }));
                //butooncheats
                var btnfreecam = new android.widget.Button(ctx);
                btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);
                btnfreecam.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(imob == 1) {

                            createfree();
                            imob = 0;
                            btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);
                        } else {
                            ModPE.setCamera(Player.getEntity());
                            Entity.remove(e);
                            e = null;
                            imob = 1;
                            btnfreecam.setText("Freecam: " + lamg[lang][9][imob]);
                        }



                    }
                }));
                var btnnig = new android.widget.Button(ctx);
                btnnig.setText(lamg[lang][8][nightvis]);
                btnnig.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(nightvis == 0) {
                            Block.setLightLevel(blo, 15);
                            nightvis = 1;
                        } else {
                            Block.setLightLevel(blo, 0);
                            nightvis = 0;
                        }
                        btnnig.setText(lamg[lang][8][nightvis]);
                    }
                }));
                gamemode = Level.getGameMode();
                var textgamemode = new android.widget.TextView(ctx);
                textgamemode.setText(lamg[lang][6][gamemode]);
                var Btngamemode = new android.widget.Button(ctx);
                Btngamemode.setText(lamg[lang][6][gamemode]);
                Btngamemode.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(gamemode == 0) {
                            Level.setGameMode(1);
                            fly = Player.canFly();
                            if(!fly) {
                                btnfly.setText(lamg[lang][7][0]);
                            } else {
                                btnfly.setText(lamg[lang][7][1]);
                            }
                        } else if(gamemode == 1) {
                            Level.setGameMode(0);
                            fly = Player.canFly();
                            if(!fly) {
                                btnfly.setText(lamg[lang][7][0]);
                            } else {
                                btnfly.setText(lamg[lang][7][1]);
                            }
                        }
                        gamemode = Level.getGameMode();
                        Btngamemode.setText(lamg[lang][6][gamemode]);
                    }
                }));
                fly = Player.canFly();
                var btnfly = new android.widget.Button(ctx);
                if(!fly) {
                    btnfly.setText(lamg[lang][7][0]);
                } else {
                    btnfly.setText(lamg[lang][7][1]);
                }
                btnfly.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(fly) {
                            if(gamemode != 1) {
                                Player.setCanFly(false);
                                fly = false;
                            } else {

                            }
                        } else {
                            fly = true;
                            Player.setCanFly(true);
                        }
                        fly = Player.canFly();
                        if(!fly) {
                            btnfly.setText(lamg[lang][7][0]);
                        } else {
                            btnfly.setText(lamg[lang][7][1]);
                        }
                    }
                }));
                var textgamesped = new android.widget.TextView(ctx);
                textgamesped.setText("Gamespeed: " + (gamespeed + 3) * 5);
                textgamesped.setGravity(textgravity);
                textgamesped.setTextSize(textsize);
                textgamesped.setTextColor(textcolor);
                var seekgamespeed = new android.widget.SeekBar(ctx);
                seekgamespeed.setMax(10);
                seekgamespeed.setProgress(gamespeed - 1);
                seekgamespeed.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({

                    onStopTrackingTouch: function(view) {
                        try {
                            gamespeed = seekgamespeed.getProgress() + 1;
                            ModPE.setGameSpeed((gamespeed + 3) * 5);
                            textgamesped.setText("Gamespeed: " + (gamespeed + 3) * 5);
                        } catch(e) {
                            toast("Error Code 2: " + e, 2);
                        }
                    }
                }));
                var btnskil = new android.widget.Button(ctx);
                btnskil.setText("EAura");
                if(!entmov) {
                    btnskil.setText("EAura: " + lamg[lang][9][1]);

                } else {

                    btnskil.setText("EAura: " + lamg[lang][9][0]);
                }
                btnskil.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        if(entmov) {
                            btnskil.setText("EAura: " + lamg[lang][9][1]);
                            entmov = false;
                        } else {
                            entmov = true;
                            btnskil.setText("EAura: " + lamg[lang][9][0]);
                        }

                    }
                }));
                var btnspam = new android.widget.Button(ctx);
                btnspam.setText("Server Spam: " + (sspam ? lamg[lang][9][0] : lamg[lang][9][1]));
                btnspam.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        eval(btnspam.setText("Server Spam: " + (sspam ? lamg[lang][9][1] : lamg[lang][9][0])));

                        eval(sspam ? sspam = false : sspam = true);
                    }
                }));
                var btnglide = new android.widget.Button(ctx);
                btnglide.setText("Glide(Beta): " + (glide ? lamg[lang][9][0] : lamg[lang][9][1]));
                btnglide.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        eval(btnglide.setText("Glide(Beta): " + (glide ? lamg[lang][9][1] : lamg[lang][9][0])));

                        eval(glide ? glide = false : glide = true);
                    }
                }));
                var btnenab = new android.widget.Button(ctx);
                btnenab.setText("Enable Multiplayer(Beta)");
                btnenab.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        var sender = "";
                        var str = "\u00a70BlockLauncher, enable scripts";
                        net.zhuoweizhang.mcpelauncher.ScriptManager.handleMessagePacketCallback(sender, str);
                        /*
                        net.zhuoweizhang.mcpelauncher.ScriptManager.selectLevelCallback("servr",  "server");
                        */
                    }
                }));

                var btnphack = new android.widget.Button(ctx);
                btnphack.setText("PassHack(Beta): " + (phack ? lamg[lang][9][0] : lamg[lang][9][1]));

                btnphack.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        eval(btnphack.setText("PassHack(Beta): " + (phack ? lamg[lang][9][1] : lamg[lang][9][0])));

                        eval(phack ? phack = false : phack = true);
                    }
                }));
                var btnmasstell = new android.widget.Button(ctx);
                btnmasstell.setText("Mass Tell(Beta)");
                btnmasstell.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        masstelld();
                    }
                }));
                var btnleetspeak = new android.widget.Button(ctx);
                btnleetspeak.setText("Leet Speak");
                var btnsendemptymes = new android.widget.Button(ctx);
                btnsendemptymes.setText("SEM");
                btnsendemptymes.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {


                        Server.sendChat(empt + empt + empt);
                    }
                }));
                //More xchecks...
                var btnserver = new android.widget.Button(ctx);
                btnserver.setText("Cooler Server!");
                btnserver.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnserver.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        serverd();
                    }
                }));
                var btnextra = new android.widget.Button(ctx);
                btnextra.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnextra.setText(lamg[lang][10]);
                btnextra.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        extramenu();
                        exit2();

                    }
                }));
                var btnabout = new android.widget.Button(ctx);
                btnabout.setText(lamg[lang][2]);
                btnabout.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnabout.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        aboutmod();

                    }
                }));
                var btnsett = new android.widget.Button(ctx);
                btnsett.setText(lamg[lang][3]);
                btnsett.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                btnsett.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        configd1();
                    }
                }));
                var updater = new android.widget.Button(ctx);
                updater.setText("Update!");
                updater.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                updater.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        updatemod();
                    }
                }));

                var follg = android.widget.Button(ctx);
                follg.setText(lamg[lang][4]);
                follg.setBackgroundColor(android.graphics.Color.parseColor("#" + themehtml));
                follg.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {

                        try {
                            openbro("https://plus.google.com/communities/103392401584364781053");
                        } catch(e) {
                            toast("Error Code 1: " + e, 2);
                        }
                    }
                }));
                //Seeker
                var sprint = new android.widget.SeekBar(ctx);
                sprint.setMax(99);
                // sprint.setMin(1);

                sprint.setProgress(sprinter);
                /*      sprint.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener(
                      {
                      onStopTrackingTouch: function(view)
                      {
                      sprinter = sprint.getProgress();
                      print(sprinter);
                      }
                      }));*/
                sprint.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener({

                    onStopTrackingTouch: function(view) {

                        sprinter = sprint.getProgress();

                        sprinttext.setText(lamg[lang][1] + ": " + (sprinter));

                    }
                }));


                //Exampleâââ
                //Add Views
                menuLayout.addView(title);
                //menuLayout.addView(sprinttext);
                //menuLayout.addView(sprint);
                //menuLayout.addView(xcheck);
                //menuLayout.addView(textgamemode);
                menuLayout.addView(Btngamemode);
                menuLayout.addView(btnfly);
                menuLayout.addView(btnglide);
                menuLayout.addView(textgamesped);
                menuLayout.addView(seekgamespeed);
                menuLayout.addView(btnnig);
                //menuLayout.addView(btnfreecam);
                menuLayout.addView(btnskil);
                menuLayout.addView(btnspam);
                menuLayout.addView(btnenab);
                menuLayout.addView(btnphack);
                menuLayout.addView(btnsendemptymes);
                //menuLayout.addView(btnmasstell);
                /*
                if(lang==1){
                menuLayout.addView(btnserver);
                }*/
                menuLayout.addView(btnextra);
                menuLayout.addView(btnabout);
                menuLayout.addView(btnsett);
                menuLayout.addView(follg);
                if(upavi) {
                    menuLayout.addView(updater);
                }
                //something...
                menu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getWidth() / 2, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getHeight());
                //menu.setBackgroundDrawable(android.graphics.Color.parseColor("#"+themehtml).setAlpha(75));

                //menu.setBackgroundDrawable(android.graphics.Color.parseColor("#EEEEEE"));
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#" + themehtml)));
                menu.showAtLocation(ctx.getWindow()
                    .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
            } catch(error) {
                print('An error occured: ' + error);
            }
        }
    }));
}

function exit() {
    var ctxe = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctxe.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var xLayout = new android.widget.LinearLayout(ctxe);
                var xButton = new android.widget.Button(ctx);
                xButton.setText('X');
                xButton.setTextSize(30);
                /*Button.setBackgroundColor(android.graphics.Color.parseColor("#000000"));*/
                if(themehtml == "d32f2f") {
                    xButton.setTextColor(android.graphics.Color.WHITE);
                } else {
                    xButton.setTextColor(android.graphics.Color.RED);
                }

                xButton.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(viewarg) {
                        exitUI.dismiss();
                        menu.dismiss();
                        if(hackermenu != null) {
                            hackermenu.dismiss();
                            hackermenu = null;
                        }
                        showmenubtn();
                    }
                }));
                xLayout.addView(xButton);
                exitUI = new android.widget.PopupWindow(xLayout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
                /*exitUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));*/
                exitUI.showAtLocation(ctxe.getWindow()
                    .getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, ctx.getWindowManager()
                    .getDefaultDisplay()
                    .getHeight() / 2);
            } catch(exception) {
                print(exception);
            }
        }
    }));
}
/*
      function leaveGame(){
      var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
      ctx.runOnUiThread(new java.pref.Runnable({ run: function(){
      if(GUI != null){
      GUI.dismiss();
      GUI = null;
      }
      if(menu != null){
      menu.dismiss();
      menu = null;
      }
      if(exitUI != null){
      exitUI.dismiss();
      exitUI = null;
      }
      }}));
      }
*/
function leaveGame() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {

            if(menu != null) {
                menu.dismiss();
                menu = null;

            }
            if(GUI == null) {
                showmenubtn();
            }
            if(hackermenu != null) {
                hackermenu.dismiss();
                hackermenu = null;
            }
            if(exitUI != null) {
                exitUI.dismiss();
                exitUI = null;
            }
        }
    }));

}

function modTick() {


    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {

        }
    }));

    if(sprinter != 0) {
        if(i == 1) {

            px = getPlayerX();
            py = getPlayerY();
            pz = getPlayerZ();
            i = i + 1;
        } else if(i == 3) {
            i = 1;
            Xdiff = getPlayerX() - px;
            Zdiff = getPlayerZ() - pz;

            setVelX(getPlayerEnt(), Xdiff * (1 + ((sprinter + 1) / 225)));
            setVelZ(getPlayerEnt(), Zdiff * (1 + ((sprinter + 1) / 225)));
            Xdiff = 0;
            Zdiff = 0;
        }
        if(i != 1) {
            i = i + 1;
        }
    }
}

function entityRemovedHook(entity) {
    if(entity == e) {
        ModPE.setCamera(Player.getEntity());

        e = null;
        imob = 1;
    }
}

function every() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            new android.os.Handler()
                .postDelayed(new java.lang.Runnable({
                    run: function() {

                        nx = getPlayerX();
                        ny = getPlayerY();
                        nz = getPlayerZ();
try{
                        if(dat && e) {
if(getYaw(Player.getEntity())>360)Entity.setRot(Player.getEntity(), 0, getPitch(Player.getEntity()));
                            ModPE.setCamera(dat);
                            setVelY(dat, -0.07);
                            setPosition(Player.getEntity(), ox, oy, oz);
                            Entity.setPosition(dat, Entity.getX(dat) + (nx - ox), Entity.getY(dat) + (ny - oy), Entity.getZ(dat) + (nz - oz));
                            Entity.setRot(dat, getYaw(Player.getEntity()), getPitch(Player.getEntity()));
                        }
}catch(e){
print(e);
}
                        //glide
                        if(glide) {
                            if(Entity.getVelY(Player.getEntity()) <= 0) {
                                setVelY(Player.getEntity(), -0.07);
                            }
                        }
                        //passwordha passhack
                        if(phack) {
                            if(pass[passi] != null) {
                                if(nor >= 0) {
                                    
                                    clientMessage("Trying the " + passi + "th password " + pass[0]);

                                    Server.sendChat("/login " + pass.shift());
                                    //Server.sendChat(pass[passi]);
                                    passi++;

                                    nor = 0;
                                } else {
                                    nor++;
                                }
                            } else {
                                phack = false;
                                toast("Tried about 1 Million Password Combinations!", 1);
                                getpass();
                                passi = 0;
                            }
                        }
                        //masstell
                        if(masstell) {
                            masstell = false;
                            var players = Server.getAllPlayers();
                            clientMessage("angefangen");
                            //clientMessage();
                            clientMessage(players[0].getName());
                            for(var i = 0; i < players.length; i++) {
                                
                                Server.sendChat("/tell " + players[i] + " " + masstellmsg);
                            }
                        }
                        //srverspam
                        if(sspam) {
                            var r = new java.lang.Runnable({
                                run: function() {

                                    var stackName = spammsg;
                                    builder = new java.lang.StringBuilder()
                                        .append(spammsg);

                                    stackName = builder.toString();

                                    for(var i = 0; i < 10; i++)

                                    {
                                        /*
                                        			 builder = new java.lang.StringBuilder().append(stackName);

                                        			stackName = builder.append("ol").toString();

                                        	*/
                                        Server.sendChat(stackName);
                                    }

                                    Server.sendChat(stackName);

                                }
                            });
                            var th = new java.lang.Thread(r);
                            th.start();
                        }
                        //liquidwalk
                        /*
                        	if(lw){
                        		Block.setLightOpacity(8, 10);
                        		Block.setLightOpacity(9, 10);
                        		Block.defineBlock(8, "Water", [["still_water", 0]], 8, false, 4);
                        		Block.defineBlock(9, "Stationary Water", [["still_water", 0]], 9, false, 4);
                        		Block.setDestroyTime(8, 1);
                        		Block.setDestroyTime(9, 1);
                        		Block.setShape(8, 0, 0, 0, 1, 0.6, 1);
                        		Block.setShape(9, 0, 0, 0, 1, 0.6, 1);
                        		}else{
                        			Block.setShape(8, 0, 0, 0, 0.001, 0.001, 0.001);
                        		Block.setShape(9, 0, 0, 0, 0.001, 0.001, 0.001);
                        			}
                        */
                        //eaura
                        if(entmov) {
                          var mobs = Entity.getAll();

for(var i=0; i<mobs.length; i++)

{

var x = Entity.getX(mobs[i])-getPlayerX();

var y = Entity.getY(mobs[i])-getPlayerY();

var z = Entity.getZ(mobs[i])-getPlayerZ();

if(x*x+y*y+z*z<=9*9 && x*x+y*y+z*z>=0.001&& mobs[i]!==Player.getEntity()&&Entity.getEntityTypeId(mobs[i])<=63&&Entity.getHealth(mobs[i])>=1){

y=y+0.5;
var a = 0.5+Entity.getX(mobs[i]);

var b = Entity.getY(mobs[i]);

var c = 0.5+Entity.getZ(mobs[i]);

var len = Math.sqrt(x*x + y*y + z*z); 

var y = y/len; 

var pitch = Math.asin(y);
pitch = pitch * 180.0 / Math.PI;
pitch=-pitch;
if(pitch<90&&pitch>-90){
Entity.setRot(Player.getEntity(), -Math.atan2(a-(Player.getX()+0.5),c-(Player.getZ()+0.5))*(180/Math.PI), pitch);

}
}
}}
                        if(aimbot){
var mobs = Entity.getAll();

for(var i=0; i<mobs.length; i++)

{

var x = Entity.getX(mobs[i])-getPlayerX();

var y = Entity.getY(mobs[i])-getPlayerY();

var z = Entity.getZ(mobs[i])-getPlayerZ();

if(x*x+y*y+z*z<=100*100 && x*x+y*y+z*z>=0.001&& mobs[i]!==Player.getEntity()&&Entity.getEntityTypeId(mobs[i])<=63&&Entity.getHealth(mobs[i])>=1){

y=y+0.5;
var a = 0.5+Entity.getX(mobs[i]);

var b = Entity.getY(mobs[i]);

var c = 0.5+Entity.getZ(mobs[i]);

var len = Math.sqrt(x*x + y*y + z*z); 

var y = y/len; 

var pitch = Math.asin(y);
pitch = pitch * 180.0 / Math.PI;
pitch=-pitch;
if(pitch<90&&pitch>-90){
aimAt(mobs[i]);

}
}
}
}
                        ModPE.langEdit("menu.copyright", "Servicehack by GodSoft029");
                        ModPE.langEdit("playscreen.header.local", "Choose world to Â§cHack");
                        ModPE.langEdit("createWorldScreen.progress.local", "Generating new hacked world...");

                        ModPE.langEdit("progressScreen.generating", "Hacking your world, please wait...");
                        ModPE.langEdit("progressScreen.message.locating", "Hacking server, please wait...");



try{
if(/*net.zhuoweizhang.mcpelauncher.ScriptManager.this.isScriptingEnabled()==false&&*/GUI!=null&&GUI.isShowing()==false&&(hackermenu==null||hackermenu.isShowing()==false)){
/*var sender = "";
                        var str = "\u00a70BlockLauncher, enable scripts";
                        net.zhuoweizhang.mcpelauncher.ScriptManager.handleMessagePacketCallback(sender, str);*/

net.zhuoweizhang.mcpelauncher.ScriptManager.isRemote = true;
net.zhuoweizhang.mcpelauncher.ScriptManager.setLevelFakeCallback(true, false);

}
}catch(e){
print(e);
}
if(GUI!=null&&GUI.isShowing()==false&&(hackermenu==null||hackermenu.isShowing()==false))showmenubtn();
/*if(!GUI && !hackermenu)showMenuBtn();*/
                        eval(every());
                    }
                }), 1000 / 70);
        }
    }))
}
every();

function randomdialog() {
    var gplus = "https://plus.google.com/communities/103392401584364781053";
    if(Math.random() <= 0.1) {

    }
}

function randomdialog() {
    var gplus = "https://plus.google.com/communities/103392401584364781053";
    if(Math.random() <= 0.05) {
        try {

            var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
            var alert2 = new android.app.AlertDialog.Builder(ctx);
            alert2.setTitle("Servicehack group");

            var layout = new android.widget.LinearLayout(ctx);
            layout.setOrientation(1);
            //Buttons, Texts...

            var text = new android.widget.TextView(ctx);
            text.setText("Do you have nice ideas?\nOr found a bug?\nThen Join our Google+ Group!");
            text.setTextSize(20);
            text.setGravity(android.view.Gravity.CENTER);
            layout.addView(text);
            layout.setGravity(android.view.Gravity.CENTER);

            alert2.setView(layout);
            alert2.setPositiveButton("Join the group!", new android.content.DialogInterface.OnClickListener({
                onClick: function(viewarg) {
                    //Your Code Here...
                    openbro(gplus);


                }
            }));
            alert2.setNegativeButton("No", new android.content.DialogInterface.OnClickListener({
                onClick: function(viewarg) {
                    //Your Code Here...



                }
            }));

            ctx.runOnUiThread(new java.lang.Runnable({
                run: function() {
                    var dialoger = alert2.create();
                    dialoger.show();
                }
            }));
        } catch(e) {
            print(e);
        }
    }
}

randomdialog();

